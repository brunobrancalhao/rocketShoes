{"ast":null,"code":"import _defineProperty from \"/home/bruno/Documentos/Projetos/Rockset/rocketShoes/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/bruno/Documentos/Projetos/Rockset/rocketShoes/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bruno/Documentos/Projetos/Rockset/rocketShoes/src/pages/Home/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport { formatPrice } from '../../util/format';\nimport api from '../../services/api';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { ProductList } from './styles';\n\nfunction Home({\n  amount\n}) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        products = _useState2[0],\n        setProducts = _useState2[1];\n\n  useEffect(() => {\n    async function loadProducts() {\n      const response = await api.get('products');\n      const data = response.data.map(product => _objectSpread({}, product, {\n        priceFormatted: formatPrice(product.price)\n      }));\n      setProducts(data);\n    }\n\n    loadProducts();\n  }, []);\n\n  handleAddProduct = id => {\n    const addToCartRequest = this.props.addToCartRequest;\n    addToCartRequest(id);\n  };\n\n  return React.createElement(ProductList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, products.map(product => React.createElement(\"li\", {\n    key: product.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: product.image,\n    alt: product.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, product.title), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, product.priceFormatted), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => this.handleAddProduct(product.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(MdAddShoppingCart, {\n    size: 16,\n    color: \"#FFF\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), ' ', \" \", amount[product.id] || 0), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Adicionar ao carrinho\")))));\n}\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount || 0;\n    return amount;\n  }, {})\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/home/bruno/Documentos/Projetos/Rockset/rocketShoes/src/pages/Home/index.js"],"names":["React","useState","useEffect","connect","bindActionCreators","MdAddShoppingCart","formatPrice","api","CartActions","ProductList","Home","amount","products","setProducts","loadProducts","response","get","data","map","product","priceFormatted","price","handleAddProduct","id","addToCartRequest","props","image","title","mapStateToProps","state","cart","reduce","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport { formatPrice } from '../../util/format';\nimport api from '../../services/api';\n\nimport * as CartActions from '../../store/modules/cart/actions';\n\nimport { ProductList } from './styles';\n\nfunction Home({ amount }) {\n  const [products,setProducts] = useState([]);\n\n  useEffect(() => {\n    async function loadProducts () {\n      const response = await api.get('products');\n\n      const data = response.data.map(product => ({\n        ...product,\n        priceFormatted: formatPrice(product.price),\n      }));\n      setProducts(data);\n\n    }\n    loadProducts();\n  }, []);\n\n  handleAddProduct = id => {\n    const { addToCartRequest } = this.props;\n\n    addToCartRequest(id);\n  };\n\n    return (\n      <ProductList>\n        { products.map(product => (\n            <li key={product.id}>\n              <img src={product.image} alt={product.title} />\n              <strong>{product.title}</strong>\n              <span>{product.priceFormatted}</span>\n\n              <button type=\"button\" onClick={() => this.handleAddProduct(product.id)} >\n                <div>\n                  <MdAddShoppingCart size={16} color=\"#FFF\" />{' '} {amount[product.id] || 0}\n                </div>\n                <span>Adicionar ao carrinho</span>\n              </button>\n            </li>\n        ))}\n      </ProductList>\n    );\n}\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount || 0;\n    return amount;\n  },{}),\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}